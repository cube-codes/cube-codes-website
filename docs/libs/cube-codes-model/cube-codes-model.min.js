var CC=function(){'use strict';var c=Number.isInteger;function a(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a["default"]:a}function b(a,b){return b={exports:{}},a(b,b.exports),b.exports}var d="undefined"==typeof globalThis?"undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?{}:self:global:window:globalThis,e=b(function(a,b){b.__esModule=!0,b.Event=void 0;var c=function(){function a(){this.listeners=[]}return a.prototype.trigger=function(a){this.listeners.forEach(function(b){b.apply({},[a])})},a.prototype.on=function(a){this.listeners.push(a)},a}();b.Event=c});a(e);var f=e.Event,g=b(function(a,b){b.__esModule=!0,b.CubeHistory=void 0;var d=function(){function a(a){this.moved=new e.Event,this.recorded=new e.Event,this.pastCleaned=new e.Event,this.futureCleaned=new e.Event,this.cube=a,this.initialState=this.cube.getState(),this.changes=[],this.currentPosition=-1;var b=this;this.cube.stateChanged.on(function(a){if(a.source&&"number"==typeof a.source.history){var c=b.currentPosition;return b.currentPosition+=a.source.history,void b.moved.trigger({from:c,by:a.source.history,to:b.currentPosition})}var d=b.currentPosition+1;b.changes.length!==d&&b.cleanFutureAfter(b.currentPosition);var e={oldState:a.oldState,newState:a.newState,move:a.move};b.changes.push(e),b.recorded.trigger({change:e,position:d});var f=b.currentPosition;b.currentPosition=d,b.moved.trigger({from:f,by:1,to:b.currentPosition})})}return a.prototype.isAtStart=function(){return-1>=this.currentPosition},a.prototype.isAtEnd=function(){return this.currentPosition>=this.changes.length-1},a.prototype.getCurrentPosition=function(){return this.currentPosition},a.prototype.getLastChange=function(){return this.changes[this.currentPosition]},a.prototype.getChangeByPosition=function(a){if(!c(a)||0>a||a>this.changes.length-1)throw"Invalid position";return this.changes[a]},a.prototype.cleanPastBefore=function(a){if(!c(a)||-1>a||a>this.changes.length-1)throw"Invalid position";-1>=a||(this.initialState=this.getChangeByPosition(a).newState,this.changes.splice(0,a+1),this.currentPosition<=a&&(this.currentPosition=-1),this.pastCleaned.trigger({before:a}))},a.prototype.cleanFutureAfter=function(a){if(!c(a)||-1>a||a>this.changes.length-1)throw"Invalid position";this.changes.splice(a+1,this.changes.length-a-1),this.currentPosition>a&&(this.currentPosition=a),this.futureCleaned.trigger({after:a})},a.prototype.stepBack=function(){if(this.isAtStart())throw"Cannot go back further";var a=this.changes[this.currentPosition];a.move?this.cube.move(a.move.getInverse(),{history:-1}):this.cube.setState(a.oldState,{history:-1})},a.prototype.stepAhead=function(){if(this.isAtEnd())throw"Cannot go ahead further";var a=this.changes[this.currentPosition+1];a.move?this.cube.move(a.move,{history:1}):this.cube.setState(a.newState,{history:1})},a.prototype.jumpToStart=function(){-1>=this.currentPosition||this.cube.setState(this.initialState,{history:-this.currentPosition-1})},a.prototype.jumpToEnd=function(){if(!(this.currentPosition>=this.changes.length-1)&&0!==this.changes.length){var a=this.changes[this.changes.length-1];this.cube.setState(a.newState,{history:this.changes.length-1-this.currentPosition})}},a.prototype.jumpToIndex=function(a){if(!c(a)||-1>a||a>this.changes.length-1)throw"Invalid position";if(-1===a)return void this.jumpToStart();var b=this.changes[a];this.cube.setState(b.newState,{history:a-this.currentPosition})},a}();b.CubeHistory=d});a(g);var h=g.CubeHistory,i=b(function(a,b){b.__esModule=!0,b.CubeMoveLanguage=void 0;var c=function(){function a(a){this.spec=a}return a.prototype.parse=function(a){var b=this;return a.split(/[^1-9FRUBLDw'xyz]+/).map(function(a){var c,d,e;if(a.match(/^\d?[FRUBLD]w['2]?$/))c=parseInt(a.substr(0,1)),d=1,e=4===a.length,isNaN(c)&&(c=2,d=0,e=3===a.length);else if(a.match(/^[FRUBLD]['2]?$/))c=1,d=0,e=2===a.length;else if(a.match(/^[xyz]['2]?$/))c=b.spec.edgeLength,d=0,e=2===a.length;else throw"Invalid CML string";var f=b.parseFace(a.substr(d,1)),g=b.parseAngle(e?a.substr(-1,1):"");return new k.CubeMove(b.spec,f,c,g)})},a.prototype.parseFace=function(a){switch(a){case"F":case"z":return 0;case"R":case"x":return 1;case"U":case"y":return 2;case"B":return 3;case"L":return 4;case"D":return 5;default:throw"Invalid CML face string";}},a.prototype.parseAngle=function(a){switch(a){case"":return 1;case"2":return 2;case"'":return-1;default:throw"Invalid CML angle string";}},a.prototype.stringify=function(a){var b=this;return a.filter(function(a){return 0!=a.angle%4}).map(function(a){var c="",d=1;return a.slices<b.spec.edgeLength?(2<a.slices&&(c+=a.slices),c+=b.stringifyFace(a.face),1<a.slices&&(c+="w")):(c+=b.stringifyRotationFace(a.face),3<=a.face&&(d=-1)),c+=b.stringifyAngle(a.angle*d),c}).join(" ")},a.prototype.stringifyFace=function(a){switch(a){case 0:return"F";case 1:return"R";case 2:return"U";case 3:return"B";case 4:return"L";case 5:return"D";default:throw"Invalid face";}},a.prototype.stringifyRotationFace=function(a){switch(a){case 0:case 3:return"z";case 1:case 4:return"x";case 2:case 5:return"y";default:throw"Invalid face";}},a.prototype.stringifyAngle=function(a){switch((a%4+4)%4){case 0:throw"No move";case 1:return"";case 2:return"2";case 3:return"'";default:throw"Invalid angle";}},a}();b.CubeMoveLanguage=c});a(i);var j=i.CubeMoveLanguage,k=b(function(a,b){b.__esModule=!0,b.Cube=b.CubeMove=b.CubeAngle=b.CubeFace=b.CubeState=b.CubeSpecification=void 0;var d=function(){return function(a){if(this.edgeLength=a,!c(a)||2>a||8<a)throw"Invalid edge length"}}();b.CubeSpecification=d;var f=function(){function a(a,b){this.spec=a,this.value=b}return a.prototype.move=function(b){return new a(this.spec,this.value+b.angle)},a}();b.CubeState=f;var g;(function(a){a[a.FRONT=0]="FRONT",a[a.RIGHT=1]="RIGHT",a[a.UP=2]="UP",a[a.BACK=3]="BACK",a[a.LEFT=4]="LEFT",a[a.DOWN=5]="DOWN"})(g=b.CubeFace||(b.CubeFace={}));var h;(function(a){a[a.C90=1]="C90",a[a.C180=2]="C180",a[a.CC90=-1]="CC90"})(h=b.CubeAngle||(b.CubeAngle={}));var j=function(){function a(a,b,d,e){if(this.spec=a,this.face=b,this.slices=d,this.angle=e,!c(b)||0>b||5<b)throw"Invalid face";if(!c(d)||1>d||d>this.spec.edgeLength)throw"Invalid slices";if(!c(e))throw"Invalid angel"}return a.prototype.getInverse=function(){return new a(this.spec,this.face,this.slices,-this.angle)},a}();b.CubeMove=j;var k=function(){function a(a){this.stateChanged=new e.Event,this.state=a}return a.prototype.getState=function(){return this.state},a.prototype.setState=function(a,b){var c=this.state;if(a.spec!==c.spec)throw"Invalid new spec";return this.state=a,this.stateChanged.trigger({oldState:c,newState:this.state,source:b}),this},a.prototype.move=function(a,b){if(0==a.angle%4)return this;var c=this.state;return this.state=this.state.move(a),this.stateChanged.trigger({oldState:c,newState:this.state,move:a,source:b}),this},a.prototype.mw=function(a,b,c,d){return void 0===c&&(c=h.C90),this.move(new j(this.state.spec,a,b,c),d)},a.prototype.mwFront=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(g.FRONT,a,b,c)},a.prototype.mwRight=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(g.RIGHT,a,b,c)},a.prototype.mwUp=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(g.UP,a,b,c)},a.prototype.mwBack=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(g.BACK,a,b,c)},a.prototype.mwLeft=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(g.LEFT,a,b,c)},a.prototype.mwDown=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(g.DOWN,a,b,c)},a.prototype.m=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(a,1,b,c)},a.prototype.mFront=function(a,b){return void 0===a&&(a=h.C90),this.m(g.FRONT,a,b)},a.prototype.mRight=function(a,b){return void 0===a&&(a=h.C90),this.m(g.RIGHT,a,b)},a.prototype.mUp=function(a,b){return void 0===a&&(a=h.C90),this.m(g.UP,a,b)},a.prototype.mBack=function(a,b){return void 0===a&&(a=h.C90),this.m(g.BACK,a,b)},a.prototype.mLeft=function(a,b){return void 0===a&&(a=h.C90),this.m(g.LEFT,a,b)},a.prototype.mDown=function(a,b){return void 0===a&&(a=h.C90),this.m(g.DOWN,a,b)},a.prototype.r=function(a,b,c){return void 0===b&&(b=h.C90),this.mw(a,this.state.spec.edgeLength,b,c)},a.prototype.rZ=function(a,b){return void 0===a&&(a=h.C90),this.r(g.FRONT,a,b)},a.prototype.rX=function(a,b){return void 0===a&&(a=h.C90),this.r(g.RIGHT,a,b)},a.prototype.rY=function(a,b){return void 0===a&&(a=h.C90),this.r(g.UP,a,b)},a.prototype.getMoveLanguage=function(){return new i.CubeMoveLanguage(this.state.spec)},a.prototype.ml=function(a,b){return this.getMoveLanguage().parse(a).forEach(function(a){this.move(a,b)}),this},a}();b.Cube=k});a(k);var l=k.Cube,m=k.CubeMove,n=k.CubeAngle,o=k.CubeFace,p=k.CubeState,q=k.CubeSpecification,r=b(function(a,b){var c=d&&d.__createBinding||(Object.create?function(a,b,c,d){d===void 0&&(d=c),Object.defineProperty(a,d,{enumerable:!0,get:function(){return b[c]}})}:function(a,b,c,d){d===void 0&&(d=c),a[d]=b[c]}),f=d&&d.__exportStar||function(a,b){for(var d in a)"default"==d||Object.prototype.hasOwnProperty.call(b,d)||c(b,a,d)};b.__esModule=!0,f(e,b),f(g,b),f(k,b),f(i,b)}),s=a(r);return s}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
